---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
data:
  config.yml: |-
    # The Kubernetes namer (io.l5d.k8s) queries the Kubernetes master API
    # for a list of pods with a given name.
    admin:
      ip: 0.0.0.0
      port: 9990

    namers:
    - kind: io.l5d.k8s
      # kubectl proxy forwards localhost:8001 to the Kubernetes master API
      host: localhost
      port: 8001
    routers:
    - protocol: http
      # Incoming requests to linkerd with a Host header of "hello" get assigned
      # a name like /svc/hello.  This dtab transforms that into
      # /#/io.l5d.k8s/default/service/hello which indicates that the kubernetes
      # namer should query the API for ports named "service" on pods in the
      # "default" namespace named "hello".  linkerd will then load balance over
      # those pods.
      dtab: |
        /svc => /#/io.l5d.k8s/default/service
      servers:
      - ip: 0.0.0.0
        port: 4140
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: linkerd
spec:
  replicas: 1
  selector:
    app: linkerd
  template:
    metadata:
      labels:
        app: linkerd
    spec:
      containers:
      - name: l5d
        image: buoyantio/linkerd:1.7.0
        args:
        - "/io.buoyant/linkerd/config/config.yml"
        ports:
        - name: incoming
          containerPort: 4140
        - name: admin
          containerPort: 9990
        volumeMounts:
        - name: "linkerd-config"
          mountPath: "/io.buoyant/linkerd/config"
          readOnly: true
        # We run a kubectl proxy container so that linkerd can talk to the
        # Kubernetes master API.
      - name: kubectl
        image: buoyantio/kubectl:v1.14.3
        args:
        - proxy
        - "-p"
        - "8001"
      volumes:
      - name: linkerd-config
        configMap:
          name: linkerd-config
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd
spec:
  selector:
    app: linkerd
  type: LoadBalancer
  ports:
  - name: incoming
    port: 4140
    targetPort: 4140
  - name: admin
    port: 9990
    targetPort: 9990
